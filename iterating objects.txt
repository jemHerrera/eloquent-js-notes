class Group {
  constructor(array){
    this.array = array;
  }
 add(value){
  if(this.array.indexOf(value) == -1){ 
  	return this.array.push(value);
  }
 }
 delete(value){
  if(this.array.indexOf(value) != -1){ 
  	this.array = this.array.filter(n => n != value);
  }
 }
 has(value){
   return this.array.indexOf(value) != -1;
 }
  static from(iterable){
    return new Group(iterable);
  }
}

class GroupIterator{
  constructor(group){
    this.i=0;
  	this.group = group;
  }
  next(){
    if (this.i == this.group.array.length) return {done:true};
    let value = this.group.array[this.i];
    this.i++;
    return{value, done: false};
  }
}

Group.prototype[Symbol.iterator] = function() {
  return new GroupIterator(this);
};

for (let value of Group.from(["a", "b", "c"])) {
  console.log(value);
}
// ? a
// ? b
// ? c